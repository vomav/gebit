services:
  db:
    image: postgres:alpine
    environment: { POSTGRES_PASSWORD: postgres,  POSTGRES_USER: postgres}
    ports: [ '5432:5432' ]
    restart: always
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/create_database.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
  nginx:
    image: nginx:latest  # Use plain nginx, not trajano/nginx-letsencrypt
    container_name: nginx
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
    volumes:
      - ./docker/localhost/nginx/config:/etc/nginx/conf.d:ro  # Nginx configuration
      - ./docker/localhost/nginx/certs:/etc/nginx/certs:ro
    restart: unless-stopped

  gebit-app:
    build: ./
    depends_on:
      - "db"
    image: gebit_app:latest
    ports: [ '8080:8080' ]
    environment:
      PG_HOST: db
      PG_PORT: 5432
      PG_DB: gebit_dev
      PG_USERNAME: postgres
      PG_PASSWORD: postgres
      JWT_ACCESS_SECRET: dGVzdHhzYWRzZHNkc2Fkc2Rzc2Zkc2FmZHN0ZXN0eHNhZHNkc2RzYWRzZHNzZmRzYWZkcw==
      JWT_REFRESH_SECRET: dGVzdHhzYWRzZHNkc2Fkc2Rzc2Zkc2FmZHN0ZXN0eHNhZHNkc2RzYWRzZHNzZmRzYWZkcw==
      SPRING_PROFILES_ACTIVE: cloud
